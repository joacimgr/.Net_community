// <auto-generated />
using System;
using DistroLabCommunity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DistroLabCommunity.Migrations
{
    [DbContext(typeof(CommunityContext))]
    [Migration("20181017122557_AddRequiredToFieldsInUserAndMessage")]
    partial class AddRequiredToFieldsInUserAndMessage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DistroLabCommunity.Models.Message", b =>
                {
                    b.Property<int>("MessageID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Opened");

                    b.Property<string>("ReceiverUserUserID");

                    b.Property<bool>("Removed");

                    b.Property<string>("SenderUserUserID");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("MessageID");

                    b.HasIndex("ReceiverUserUserID");

                    b.HasIndex("SenderUserUserID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DistroLabCommunity.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("LastAccountActivity");

                    b.Property<string>("Username");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DistroLabCommunity.Models.Message", b =>
                {
                    b.HasOne("DistroLabCommunity.Models.User", "ReceiverUser")
                        .WithMany("receivedMessages")
                        .HasForeignKey("ReceiverUserUserID");

                    b.HasOne("DistroLabCommunity.Models.User", "SenderUser")
                        .WithMany("sentMessages")
                        .HasForeignKey("SenderUserUserID");
                });
#pragma warning restore 612, 618
        }
    }
}
